*Deep Dive 자바스크립트 책을 공부하면서 기초부터 심화까지 중요하다고 생각하는 것들을 복습하기로 했다. 
또, 모르는 지식들도 엄청 많기 때문에 책을 읽으면서 알지만 중요한건 복습하고, 몰랐던 것들은 확실히 알아가는 과정을
거칠 것이다.

1. variavble.js
- 이번 공부는 변수에 관한 공부이다. 변수는 var, let, const가 있고, 변수에 따른 특징들과 차이점을 공부했다.
각 변수들의 특징은 알고 있었지만, 그래도 조금 더 자세히 알게된 것 같다. 

(네이버 블로그 - https://blog.naver.com/seongu97/222421462619)

2. hoisting.js
- 변수와 함수의 호이스팅 공부를 복습하였다.
예전에 유튜브 강의를 공부하면서 호이스팅에 대해서 한번 접한적이 있었다. 호이스팅은 대표적으로 함수를 예로 들자면,
함수는 기본적으로 선언과 호출 순서로 작성해야한다. 하지만 작성자가 실수로 호출을 먼저하고, 선언을 나중에 했다고
하더라도 정상적으로 작동이된다. 그 이유는 선언문이 호출문 위로 올려지게 되기 떄문이다.
강의나 블로그를 보더라도 다들 이렇게 이해를 시켜준다. 하지만 MDN 사이트에는 실제로는 작성한 소스코드가 그 자리에
정확히 위치해 있다고한다. 공부하는 책을 보니까 책에는 변수나 함수가 호출을 먼저 하고 선언을 나중에 했다고 하더라도
자바스크립트는 선언이 어떤 위치에 있던 먼저 읽는다고 했다. 그래서 아마도 선언문이 호출문 위로 올려진다는 것은
이해를 돕기위한 말이고, 실제로는 선언문을 먼저 읽는게 맞는 것 같다.

(네이버 블로그 - https://blog.naver.com/seongu97/222422246274)

3. literal.js
- 코딩을 하면서 단순히 입력하던 문자나, 숫자, 특수문자등, 별생각 없이 써왔었다.
하지만 이러한 것들을 리터널이라고 불려왔고, 리터널은 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해서
값을 생성하는 표기법이라고 정의되어 있다.
예를들어 코드에 숫자 1을 적었다고 하면, 자바스크립트 엔진은 이를 평가해서 숫자 1을 생성한다.
이처럼 당연하게 화면에 나타나는 문자나 기호들이 이러한 과정을 거치고 단순히 생성되는 것이 아니란걸 알게되었다.
그리고 문자나 기호 뿐만 아니라 불리언, null, undefined, 객체, 배열, 함수등, 다양한 종류가 있다.

(네이버 블로그 - https://blog.naver.com/seongu97/222423673049)