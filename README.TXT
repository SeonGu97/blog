*Deep Dive 자바스크립트 책을 공부하면서 기초부터 심화까지 중요하다고 생각하는 것들을 복습하기로 했다. 
또, 모르는 지식들도 엄청 많기 때문에 책을 읽으면서 알지만 중요한건 복습하고, 몰랐던 것들은 확실히 알아가는 과정을
거칠 것이다.

1. variavble.js
- 이번 공부는 변수에 관한 공부이다. 변수는 var, let, const가 있고, 변수에 따른 특징들과 차이점을 공부했다.
각 변수들의 특징은 알고 있었지만, 그래도 조금 더 자세히 알게된 것 같다. 

(네이버 블로그 - https://blog.naver.com/seongu97/222421462619)

2. hoisting.js
- 변수와 함수의 호이스팅 공부를 복습하였다.
예전에 유튜브 강의를 공부하면서 호이스팅에 대해서 한번 접한적이 있었다. 호이스팅은 대표적으로 함수를 예로 들자면,
함수는 기본적으로 선언과 호출 순서로 작성해야한다. 하지만 작성자가 실수로 호출을 먼저하고, 선언을 나중에 했다고
하더라도 정상적으로 작동이된다. 그 이유는 선언문이 호출문 위로 올려지게 되기 떄문이다.
강의나 블로그를 보더라도 다들 이렇게 이해를 시켜준다. 하지만 MDN 사이트에는 실제로는 작성한 소스코드가 그 자리에
정확히 위치해 있다고한다. 공부하는 책을 보니까 책에는 변수나 함수가 호출을 먼저 하고 선언을 나중에 했다고 하더라도
자바스크립트는 선언이 어떤 위치에 있던 먼저 읽는다고 했다. 그래서 아마도 선언문이 호출문 위로 올려진다는 것은
이해를 돕기위한 말이고, 실제로는 선언문을 먼저 읽는게 맞는 것 같다.

(네이버 블로그 - https://blog.naver.com/seongu97/222422246274)

3. literal.js
- 코딩을 하면서 단순히 입력하던 문자나, 숫자, 특수문자등, 별생각 없이 써왔었다.
하지만 이러한 것들을 리터널이라고 불려왔고, 리터널은 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해서
값을 생성하는 표기법이라고 정의되어 있다.
예를들어 코드에 숫자 1을 적었다고 하면, 자바스크립트 엔진은 이를 평가해서 숫자 1을 생성한다.
이처럼 당연하게 화면에 나타나는 문자나 기호들이 이러한 과정을 거치고 단순히 생성되는 것이 아니란걸 알게되었다.
그리고 문자나 기호 뿐만 아니라 불리언, null, undefined, 객체, 배열, 함수등, 다양한 종류가 있다.

(네이버 블로그 - https://blog.naver.com/seongu97/222423673049)

4. date_type.js
- 오늘은 데이터 타입을 공부했다. 데이터 타입은 사실 지금까지 잘 사용해오고 있었다. 물론 사용할 줄은 알지만
이론적으로는 다 알지는 못했었다. 그중에 잘 모르고 있었던 데이터 타입이 있었는데 바로 심볼 타입 이였다.
예전에 유튜브 강의를 보면서 배우긴 했지만 막상 쓸 상황이 없었기에 머리에 남아있지는 않았던것 같다.
심볼 타입은 유일무이한 값이고 충돌할 위험이 없는 키를 만들기 위해 사용된다. 나중에 사용할 일이 있을지는 모르겠지만
뭔가 사용하기에 보안이라던지 중복에 대한 위험성이 없는걸 보아서는 유용하게 쓰일것 같다.

(네이버 블로그 - https://blog.naver.com/seongu97/222425019750)

5. arithmetic.js
- 오늘은 연산자를 공부했다. 가장 기억에 남는 연산자는 코딩을 하면서 자주 써왔던 삼항 연산자이다.
if문이나 switch문이 있지만 간단하게 한줄에 표현할수 있고 깔끔해서 자주 사용해왔었다.
그리고 비교 연산자도 가끔 사용을 해왔었는데 역시 책에 나왔다.
예를 들어 x = x + 1; 이라고 한다면 x가 중복되고 코드가 길어진다. 간단 명료하게 x += 1; 하면 같은 기능을 한다.
요번 연산자는 실전에서 효율적인 기능들이 몇몇 있어서 유용했던것 같다.

(네이버 블로그 - https://blog.naver.com/seongu97/222426090286)

6. 제어문.js
- 오늘은 제어문을 공부했다. 제어문은 코드를 짜면서 정말 많이 사용이 된다.
어떠한 조건을 설정하고 그 조건을 충족한다면 특정 코드를 실행 또, 조건을 달성하지 못하면 특정 코드를 실행 하므로써
정말 유용하게 쓰일 수 있다. 전에 공부한 연산자 부분에서 삼항 연산자를 공부했는데 if문과 유사한 특징을 가지고 있다.
또, switch문이 있다. if문이 불리언 값으로 동작한다면, switch는 문자열이나 숫자를 평가하는데 많이 쓰인다.
그리고 반복문도 있다. for문은 조건을 설정하고 그 조건이 참이 될때까지 반복을 할 수 있다. 반대로 while문이 있는데
이 문은 조건이 불명확할 때 주로 쓰인다.
제어문 부분은 실전에 많이 쓰이기 때문에 많이 사용해 보아서 익숙했고, 복습하는데 어려움은 없었다.

(네이버 블로그 - https://blog.naver.com/seongu97/222428959478)

7. 프로퍼티와메서드.js
- 오늘은 프로퍼티와 메서드를 공부했다. 프로퍼티와 메서드는 사실 정확하게는 모르고 있었다.
구글링을 해도 시원한 정의가 없었다. 그래서 어느정도의 개념만 알고 있었는데 이번 기회에 정확하게 알게 된 것 같다.

(네이버 블로그 - https://blog.naver.com/seongu97/222430170060)

8. function.js
- 오늘은 함수를 복습했다. 자바스크립트의 가장 중요한 부분 중 하나라고 생각한다.
함수는 선언과 호출로 나누어져 있다. 일반적으로는 선언 후 호출을 한다. 함수는 재사용이 가능하다. 그러기 때문에
만약 코드를 짜는 중 반복해서 사용되는 코드가 있다면 함수에 담아서 사용하면 코드의 가독성이 좋아지게 된다.
그리고 콜백 함수라는 것이 있다. 콜백 함수는 쉽게 말하자면 말 그대로 다시 불러오는 것이다. 예를 들어 클릭 이벤트를
만들었다고 가정하면 특정 버튼을 누르면 함수가 실행된다. 이때 버튼을 클릭하면 함수를 불러오는 것, 즉 필요할 때 다시
불러온다고 생각하면 이해가 빠르다. 사실 함수는 사용하기에 정말 유용한 기능이지만 조심해서 다루어야 할 기능이기도
하다. 콜백 함수의 지옥이란 말이 있는데 함수인에 함수를 넣고 그 함수인에 함수를 넣는 이런 지옥 같은 일이 반복돼서
발생되는 것을 콜백 함수 지옥이라고도 한다. 그러기 때문에 가독성을 유의하면서 사용해야 한다.

(네이버 블로그 - https://blog.naver.com/seongu97/222431629386)

9. scope.js
- 오늘은 스코프에 대해서 공부했다. 사실 자바스크립트에서 스코프란 단어를 거의 처음 들은 것 같다.
하지만 의미는 이미 알고 있는 부분 이였다. 변수로 치자면 전역변수와 지역변수 차이였다.
변수 말고도 모든 식별자가 전역과 지역을 가질수 있고, 전역변수로 따지자면 어디서든 참조가 가능하고, 함수 안에
있는 변수는 함수 안에서만 참조가 가능하고 함수 밖에서는 참조가 불가능하다 이는 지역변수이다.
전역과 지역의 차이를 한번더 복습하는 계기가 된 것 같다. 

(네이버 블로그 - https://blog.naver.com/seongu97/222432900679)